CC=bcc
COPTS=-w -c -I. -u- -O2

pdptest.exe: osstart.obj pdptest.obj stdio.obj string.obj stdlib.obj \
       start.obj time.obj errno.obj assert.obj signal.obj locale.obj \
       ctype.obj setjmp.obj math.obj fpfuncsb.obj
  if exist borland.lib del borland.lib
  tlib borland +osstart.obj
  tlib borland +stdio.obj
  tlib borland +string.obj
  tlib borland +stdlib.obj
  tlib borland +start.obj
  tlib borland +time.obj
  tlib borland +errno.obj
  tlib borland +assert.obj
  tlib borland +signal.obj
  tlib borland +locale.obj
  tlib borland +ctype.obj
  tlib borland +setjmp.obj
  tlib borland +math.obj
  tlib borland +fpfuncsb.obj
  tlink pdptest,pdptest.exe,nul.map,borland.lib+e:\bcos2\lib\os2.lib

osstart.obj: osstart.asm
  tasm -mx -w2 osstart.asm

start.obj: start.c
  $(CC) $(COPTS) start.c

pdptest.obj: pdptest.c
  $(CC) $(COPTS) pdptest.c

stdio.obj: stdio.c
  $(CC) $(COPTS) stdio.c

string.obj: string.c
  $(CC) $(COPTS) string.c

stdlib.obj: stdlib.c
  $(CC) $(COPTS) stdlib.c

time.obj: time.c
  $(CC) $(COPTS) time.c

errno.obj: errno.c
  $(CC) $(COPTS) errno.c

assert.obj: assert.c
  $(CC) $(COPTS) assert.c

signal.obj: signal.c
  $(CC) $(COPTS) signal.c

locale.obj: locale.c
  $(CC) $(COPTS) locale.c

ctype.obj: ctype.c
  $(CC) $(COPTS) ctype.c

setjmp.obj: setjmp.c
  $(CC) $(COPTS) setjmp.c

math.obj: math.c
  $(CC) $(COPTS) math.c

fpfuncsb.obj: fpfuncsb.c
  $(CC) $(COPTS) fpfuncsb.c


